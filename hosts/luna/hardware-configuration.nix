# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/c5ed7f9e-4661-4b9f-8c9d-8f0659696bc5";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/6622-CD72";
    fsType = "vfat";
    options = [ "fmask=0022" "dmask=0022" ];
  };

  fileSystems."/mnt/imbrium" = {
    device = "/dev/disk/by-uuid/128b1a4f-d766-4022-a409-7fa9e4f0bcef";
    fsType = "ext4";
    options = [
      "users"
      "nofail"
    ];
  };

  fileSystems."/mnt/crisium" = {
    device = "/dev/disk/by-uuid/004da557-bc1a-4751-b799-249864cb2157";
    fsType = "ext4";
    options = [
      "users"
      "nofail"
    ];
  };

  fileSystems."/mnt/pierre" = {
    device = "/dev/disk/by-uuid/1fec8fd2-ac7d-4370-90b2-8c4079557f60";
    fsType = "ext3";
    options = [
      "users"
      "nofail"
    ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
